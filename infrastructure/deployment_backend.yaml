apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-backend-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-backend
  template:
    metadata:
      labels:
        app: flask-backend
    spec:
      #nodeSelector:
       # kubernetes.io/hostname: minikube-m04
      containers:
        - name: flask-backend-container
          image: hamzaarshad10/backend:latest
          ports:
            - containerPort: 8080  # The port your Flask app is running on inside the container
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: flask-backend
  ports:
    - protocol: TCP
      port: 8080  # Expose the Flask app on port 80 externally (NodePort)
      targetPort: 8080  # The port your Flask app is listening on inside the container
  type: NodePort
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  generateName: clone-build-push-run-
spec:
  pipelineRef:
    name: clone-build-push
  podTemplate:
    securityContext:
      fsGroup: 65532
  workspaces:
  - name: shared-data
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  - name: docker-credentials
    secret:
      secretName: docker-credentials
  params:
  - name: repo-url
    value: https://github.com/SHARJEEL-482/automate_ci-cd.git
  - name: image-reference
    value: wicks482/tekton
  - name: repopath
    value: /app/front-end/Dockerfile